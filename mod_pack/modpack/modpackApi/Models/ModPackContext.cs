// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace modpackApi.Models;

public partial class ModPackContext : DbContext
{
    public ModPackContext()
    {
    }

    public ModPackContext(DbContextOptions<ModPackContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Administrator> Administrators { get; set; }

    public virtual DbSet<AdministratorActivitylog> AdministratorActivitylogs { get; set; }

    public virtual DbSet<AdministratorModification> AdministratorModifications { get; set; }

    public virtual DbSet<AdministratorTitle> AdministratorTitles { get; set; }

    public virtual DbSet<Cart> Carts { get; set; }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<Color> Colors { get; set; }

    public virtual DbSet<Component> Components { get; set; }

    public virtual DbSet<Credit> Credits { get; set; }

    public virtual DbSet<Customized> Customizeds { get; set; }

    public virtual DbSet<CustomizedSpecification> CustomizedSpecifications { get; set; }

    public virtual DbSet<Favorite> Favorites { get; set; }

    public virtual DbSet<FavoriteItem> FavoriteItems { get; set; }

    public virtual DbSet<ImageCarousel> ImageCarousels { get; set; }

    public virtual DbSet<Inspiration> Inspirations { get; set; }

    public virtual DbSet<InspirationSpecification> InspirationSpecifications { get; set; }

    public virtual DbSet<Material> Materials { get; set; }

    public virtual DbSet<Member> Members { get; set; }

    public virtual DbSet<MemberActivitylog> MemberActivitylogs { get; set; }

    public virtual DbSet<MemberLevel> MemberLevels { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderDetail> OrderDetails { get; set; }

    public virtual DbSet<OrderStatus> OrderStatuses { get; set; }

    public virtual DbSet<PasswordReset> PasswordResets { get; set; }

    public virtual DbSet<Payment> Payments { get; set; }

    public virtual DbSet<PaymentStatus> PaymentStatuses { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<ProductSpecification> ProductSpecifications { get; set; }

    public virtual DbSet<PromoCode> PromoCodes { get; set; }

    public virtual DbSet<Promotion> Promotions { get; set; }

    public virtual DbSet<ServiceRecord> ServiceRecords { get; set; }

    public virtual DbSet<Shipping> Shippings { get; set; }

    public virtual DbSet<ShippingStatus> ShippingStatuses { get; set; }

    public virtual DbSet<Status> Statuses { get; set; }

    public virtual DbSet<StoreLocation> StoreLocations { get; set; }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Data Source=.;Initial Catalog=modpack;User ID=mac2;Password=Miracle/850630/;Connect Timeout=30");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Administrator>(entity =>
        {
            entity.HasKey(e => e.AdministratorId).HasName("PK__Administ__ACDEFE33B7C742FC");

            entity.ToTable("Administrator");

            entity.HasIndex(e => e.Account, "UQ__Administ__B0C3AC460D29209B").IsUnique();

            entity.Property(e => e.AdministratorId).HasColumnName("AdministratorID");
            entity.Property(e => e.Account)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AdminCode)
                .IsRequired()
                .HasMaxLength(5)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Image).HasMaxLength(50);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TitleId).HasColumnName("TitleID");

            entity.HasOne(d => d.Title).WithMany(p => p.Administrators)
                .HasForeignKey(d => d.TitleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Administr__Title__37461F20");
        });

        modelBuilder.Entity<AdministratorActivitylog>(entity =>
        {
            entity.HasKey(e => e.ActivitylogId).HasName("PK__Administ__7D9C74C75B25BD4B");

            entity.ToTable("AdministratorActivitylog");

            entity.Property(e => e.ActivitylogId).HasColumnName("ActivitylogID");
            entity.Property(e => e.AdministratorId).HasColumnName("AdministratorID");
            entity.Property(e => e.LoginTime).HasColumnType("datetime");
            entity.Property(e => e.LogoutTime).HasColumnType("datetime");

            entity.HasOne(d => d.Administrator).WithMany(p => p.AdministratorActivitylogs)
                .HasForeignKey(d => d.AdministratorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Administr__Admin__383A4359");
        });

        modelBuilder.Entity<AdministratorModification>(entity =>
        {
            entity.HasKey(e => e.ModificationId).HasName("PK__Administ__A3FE5A12E699C26F");

            entity.ToTable("AdministratorModification");

            entity.Property(e => e.ModificationId).HasColumnName("ModificationID");
            entity.Property(e => e.AdministratorId).HasColumnName("AdministratorID");
            entity.Property(e => e.ModificationTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ModifierDescribe)
                .HasMaxLength(50)
                .HasDefaultValue("");
            entity.Property(e => e.ModifierId).HasColumnName("ModifierID");

            entity.HasOne(d => d.Administrator).WithMany(p => p.AdministratorModificationAdministrators)
                .HasForeignKey(d => d.AdministratorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Administr__Admin__392E6792");

            entity.HasOne(d => d.Modifier).WithMany(p => p.AdministratorModificationModifiers)
                .HasForeignKey(d => d.ModifierId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Administr__Modif__3A228BCB");
        });

        modelBuilder.Entity<AdministratorTitle>(entity =>
        {
            entity.HasKey(e => e.TitleId).HasName("PK__Administ__757589E66CFEEC75");

            entity.ToTable("AdministratorTitle");

            entity.Property(e => e.TitleId).HasColumnName("TitleID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Cart>(entity =>
        {
            entity.HasKey(e => e.CartId).HasName("PK__Cart__51BCD797FFCF03C9");

            entity.ToTable("Cart");

            entity.Property(e => e.CartId).HasColumnName("CartID");
            entity.Property(e => e.CustomizedId).HasColumnName("CustomizedID");
            entity.Property(e => e.InspirationId).HasColumnName("InspirationID");
            entity.Property(e => e.MemberId).HasColumnName("MemberID");
            entity.Property(e => e.ProductId).HasColumnName("ProductID");

            entity.HasOne(d => d.Customized).WithMany(p => p.Carts)
                .HasForeignKey(d => d.CustomizedId)
                .HasConstraintName("FK__Cart__Customized__04E4BC85");

            entity.HasOne(d => d.Inspiration).WithMany(p => p.Carts)
                .HasForeignKey(d => d.InspirationId)
                .HasConstraintName("FK__Cart__Inspiratio__05D8E0BE");

            entity.HasOne(d => d.Member).WithMany(p => p.Carts)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart__MemberID__06CD04F7");

            entity.HasOne(d => d.Product).WithMany(p => p.Carts)
                .HasForeignKey(d => d.ProductId)
                .HasConstraintName("FK__Cart__ProductID__07C12930");
        });

        modelBuilder.Entity<Category>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__Category__19093A2B4B1D4ACC");

            entity.ToTable("Category");

            entity.Property(e => e.CategoryId).HasColumnName("CategoryID");
            entity.Property(e => e.ComponentId).HasColumnName("ComponentID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Component).WithMany(p => p.Categories)
                .HasForeignKey(d => d.ComponentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Category__Compon__08B54D69");
        });

        modelBuilder.Entity<Color>(entity =>
        {
            entity.HasKey(e => e.ColorId).HasName("PK__Color__8DA7676DB864B341");

            entity.ToTable("Color");

            entity.Property(e => e.ColorId).HasColumnName("ColorID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Rgb)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("RGB");
        });

        modelBuilder.Entity<Component>(entity =>
        {
            entity.HasKey(e => e.ComponentId).HasName("PK__Componen__D79CF02E7BE6CD78");

            entity.ToTable("Component");

            entity.Property(e => e.ComponentId).HasColumnName("ComponentID");
            entity.Property(e => e.Category)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.ColorId).HasColumnName("ColorID");
            entity.Property(e => e.FbxfileName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FBXFileName");
            entity.Property(e => e.ImageFileName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.OriginalPrice).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.StatusId).HasColumnName("StatusID");

            entity.HasOne(d => d.Color).WithMany(p => p.Components)
                .HasForeignKey(d => d.ColorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Component__Color__09A971A2");

            entity.HasOne(d => d.Material).WithMany(p => p.Components)
                .HasForeignKey(d => d.MaterialId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Component__Mater__0A9D95DB");

            entity.HasOne(d => d.Status).WithMany(p => p.Components)
                .HasForeignKey(d => d.StatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Component__Statu__0B91BA14");
        });

        modelBuilder.Entity<Credit>(entity =>
        {
            entity.HasKey(e => e.CreditId).HasName("PK__Credit__ED5ED09BB71EAD3E");

            entity.ToTable("Credit");

            entity.Property(e => e.CreditId).HasColumnName("CreditID");
            entity.Property(e => e.HistoryName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.MemberId).HasColumnName("MemberID");
            entity.Property(e => e.ModificationTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Member).WithMany(p => p.Credits)
                .HasForeignKey(d => d.MemberId)
                .HasConstraintName("FK__Credit__MemberID__0C85DE4D");
        });

        modelBuilder.Entity<Customized>(entity =>
        {
            entity.HasKey(e => e.CustomizedId).HasName("PK__Customiz__603F25BF81F92FA7");

            entity.ToTable("Customized");

            entity.Property(e => e.CustomizedId).HasColumnName("CustomizedID");
            entity.Property(e => e.ImageFileName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MemberId).HasColumnName("MemberID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.PromotionId).HasColumnName("PromotionID");
            entity.Property(e => e.SalePrice).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Member).WithMany(p => p.Customizeds)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Customize__Membe__0E6E26BF");

            entity.HasOne(d => d.Promotion).WithMany(p => p.Customizeds)
                .HasForeignKey(d => d.PromotionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Customize__Promo__0F624AF8");
        });

        modelBuilder.Entity<CustomizedSpecification>(entity =>
        {
            entity.HasKey(e => e.CustomizedSpecificationId).HasName("PK__Customiz__FF17316E5CF588FD");

            entity.ToTable("CustomizedSpecification");

            entity.Property(e => e.CustomizedSpecificationId).HasColumnName("CustomizedSpecificationID");
            entity.Property(e => e.ColorId).HasColumnName("ColorID");
            entity.Property(e => e.ComponentId).HasColumnName("ComponentID");
            entity.Property(e => e.CustomizedId).HasColumnName("CustomizedID");
            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            entity.HasOne(d => d.Color).WithMany(p => p.CustomizedSpecifications)
                .HasForeignKey(d => d.ColorId)
                .HasConstraintName("FK__Customize__Color");

            entity.HasOne(d => d.Component).WithMany(p => p.CustomizedSpecifications)
                .HasForeignKey(d => d.ComponentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Customize__Compo__10566F31");

            entity.HasOne(d => d.Customized).WithMany(p => p.CustomizedSpecifications)
                .HasForeignKey(d => d.CustomizedId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Customize__Custo__114A936A");

            entity.HasOne(d => d.Material).WithMany(p => p.CustomizedSpecifications)
                .HasForeignKey(d => d.MaterialId)
                .HasConstraintName("FK__Customize__Material");
        });

        modelBuilder.Entity<Favorite>(entity =>
        {
            entity.HasKey(e => e.FavoritesId).HasName("PK__Favorite__0E677795642B5E21");

            entity.Property(e => e.FavoritesId).HasColumnName("FavoritesID");
            entity.Property(e => e.MemberId).HasColumnName("MemberID");

            entity.HasOne(d => d.Member).WithMany(p => p.Favorites)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Favorites__Membe__160F4887");
        });

        modelBuilder.Entity<FavoriteItem>(entity =>
        {
            entity.HasKey(e => e.ItemsId).HasName("PK__Favorite__19AFB89E4F9DDD0C");

            entity.Property(e => e.ItemsId).HasColumnName("ItemsID");
            entity.Property(e => e.CustomizedId).HasColumnName("CustomizedID");
            entity.Property(e => e.FavoritesId).HasColumnName("FavoritesID");
            entity.Property(e => e.InspirationId).HasColumnName("InspirationID");
            entity.Property(e => e.ProductId).HasColumnName("ProductID");

            entity.HasOne(d => d.Customized).WithMany(p => p.FavoriteItems)
                .HasForeignKey(d => d.CustomizedId)
                .HasConstraintName("FK__FavoriteI__Custo__123EB7A3");

            entity.HasOne(d => d.Favorites).WithMany(p => p.FavoriteItems)
                .HasForeignKey(d => d.FavoritesId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FavoriteI__Favor__14270015");

            entity.HasOne(d => d.Inspiration).WithMany(p => p.FavoriteItems)
                .HasForeignKey(d => d.InspirationId)
                .HasConstraintName("FK__FavoriteI__Inspi__14270015");

            entity.HasOne(d => d.Product).WithMany(p => p.FavoriteItems)
                .HasForeignKey(d => d.ProductId)
                .HasConstraintName("FK__FavoriteI__Produ__160F4887");
        });

        modelBuilder.Entity<ImageCarousel>(entity =>
        {
            entity.HasKey(e => e.ImageCarouselId).HasName("PK__ImageCar__23805719424F93BD");

            entity.ToTable("ImageCarousel");

            entity.Property(e => e.ImageCarouselId).HasColumnName("ImageCarouselID");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Inspiration>(entity =>
        {
            entity.HasKey(e => e.InspirationId).HasName("PK__Inspirat__9FEF7BB07521F338");

            entity.ToTable("Inspiration");

            entity.Property(e => e.InspirationId).HasColumnName("InspirationID");
            entity.Property(e => e.ImageFileName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.PromotionId).HasColumnName("PromotionID");
            entity.Property(e => e.SalePrice).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Promotion).WithMany(p => p.Inspirations)
                .HasForeignKey(d => d.PromotionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Inspirati__Promo__17F790F9");
        });

        modelBuilder.Entity<InspirationSpecification>(entity =>
        {
            entity.HasKey(e => e.InspirationSpecificationId).HasName("PK__Inspirat__157FB820BE04BB7A");

            entity.ToTable("InspirationSpecification");

            entity.Property(e => e.InspirationSpecificationId).HasColumnName("InspirationSpecificationID");
            entity.Property(e => e.ColorId).HasColumnName("ColorID");
            entity.Property(e => e.ComponentId).HasColumnName("ComponentID");
            entity.Property(e => e.InspirationId).HasColumnName("InspirationID");
            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");

            entity.HasOne(d => d.Color).WithMany(p => p.InspirationSpecifications)
                .HasForeignKey(d => d.ColorId)
                .HasConstraintName("FK__Inspirati__Color");

            entity.HasOne(d => d.Component).WithMany(p => p.InspirationSpecifications)
                .HasForeignKey(d => d.ComponentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Inspirati__Compo__18EBB532");

            entity.HasOne(d => d.Inspiration).WithMany(p => p.InspirationSpecifications)
                .HasForeignKey(d => d.InspirationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Inspirati__Inspi__19DFD96B");

            entity.HasOne(d => d.Material).WithMany(p => p.InspirationSpecifications)
                .HasForeignKey(d => d.MaterialId)
                .HasConstraintName("FK__Inspirati__Material");
        });

        modelBuilder.Entity<Material>(entity =>
        {
            entity.HasKey(e => e.MaterialId).HasName("PK__Material__C50613176834BA51");

            entity.ToTable("Material");

            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");
            entity.Property(e => e.ImageFileName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Member>(entity =>
        {
            entity.HasKey(e => e.MemberId).HasName("PK__Member__0CF04B382A47F456");

            entity.ToTable("Member");

            entity.HasIndex(e => e.Account, "UQ__Member__B0C3AC462CA1DC47").IsUnique();

            entity.Property(e => e.MemberId).HasColumnName("MemberID");
            entity.Property(e => e.Account)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Address).HasMaxLength(100);
            entity.Property(e => e.CreationTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LevelId).HasColumnName("LevelID");
            entity.Property(e => e.ModificationTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(50);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .HasMaxLength(25)
                .IsUnicode(false);

            entity.HasOne(d => d.Level).WithMany(p => p.Members)
                .HasForeignKey(d => d.LevelId)
                .HasConstraintName("FK__Member__LevelID__1AD3FDA4");
        });

        modelBuilder.Entity<MemberActivitylog>(entity =>
        {
            entity.HasKey(e => e.ActivitylogId).HasName("PK__MemberAc__7D9C74C79C66E546");

            entity.ToTable("MemberActivitylog");

            entity.Property(e => e.ActivitylogId).HasColumnName("ActivitylogID");
            entity.Property(e => e.LoginTime).HasColumnType("datetime");
            entity.Property(e => e.MemberId).HasColumnName("MemberID");

            entity.HasOne(d => d.Member).WithMany(p => p.MemberActivitylogs)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MemberAct__Membe__1BC821DD");
        });

        modelBuilder.Entity<MemberLevel>(entity =>
        {
            entity.HasKey(e => e.LevelId).HasName("PK__MemberLe__09F03C06A78E89D3");

            entity.ToTable("MemberLevel");

            entity.Property(e => e.LevelId).HasColumnName("LevelID");
            entity.Property(e => e.Name).HasMaxLength(20);
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.OrderId).HasName("PK__Order__C3905BAFAB04E5A5");

            entity.ToTable("Order");

            entity.Property(e => e.OrderId).HasColumnName("OrderID");
            entity.Property(e => e.BillRecipientAddress).HasMaxLength(50);
            entity.Property(e => e.BillRecipientName).HasMaxLength(50);
            entity.Property(e => e.CompletionTime).HasColumnType("datetime");
            entity.Property(e => e.CreationTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.MemberId).HasColumnName("MemberID");
            entity.Property(e => e.OrderStatusId).HasColumnName("OrderStatusID");
            entity.Property(e => e.PaymentId).HasColumnName("PaymentID");
            entity.Property(e => e.PaymentStatusId).HasColumnName("PaymentStatusID");
            entity.Property(e => e.PromoCodeId).HasColumnName("PromoCodeID");
            entity.Property(e => e.RecipientAddress).HasMaxLength(50);
            entity.Property(e => e.RecipientName).HasMaxLength(50);
            entity.Property(e => e.ShippingId).HasColumnName("ShippingID");
            entity.Property(e => e.ShippingStatusId).HasColumnName("ShippingStatusID");

            entity.HasOne(d => d.Member).WithMany(p => p.Orders)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Order__MemberID__01F34141");

            entity.HasOne(d => d.OrderStatus).WithMany(p => p.Orders)
                .HasForeignKey(d => d.OrderStatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Order__OrderStat__02E7657A");

            entity.HasOne(d => d.Payment).WithMany(p => p.Orders)
                .HasForeignKey(d => d.PaymentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Order_Payment");

            entity.HasOne(d => d.PaymentStatus).WithMany(p => p.Orders)
                .HasForeignKey(d => d.PaymentStatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Order__PaymentSt__03DB89B3");

            entity.HasOne(d => d.PromoCode).WithMany(p => p.Orders)
                .HasForeignKey(d => d.PromoCodeId)
                .HasConstraintName("FK__Order__PromoCode__05C3D225");

            entity.HasOne(d => d.Shipping).WithMany(p => p.Orders)
                .HasForeignKey(d => d.ShippingId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Order_Shipping");

            entity.HasOne(d => d.ShippingStatus).WithMany(p => p.Orders)
                .HasForeignKey(d => d.ShippingStatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Order__ShippingS__04CFADEC");
        });

        modelBuilder.Entity<OrderDetail>(entity =>
        {
            entity.HasKey(e => e.DetailsId).HasName("PK__OrderDet__BAC862ACC7D4E009");

            entity.Property(e => e.DetailsId).HasColumnName("DetailsID");
            entity.Property(e => e.CustomizedId).HasColumnName("CustomizedID");
            entity.Property(e => e.InspirationId).HasColumnName("InspirationID");
            entity.Property(e => e.OrderId).HasColumnName("OrderID");
            entity.Property(e => e.ProductId).HasColumnName("ProductID");
            entity.Property(e => e.UnitPrice).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Customized).WithMany(p => p.OrderDetails)
                .HasForeignKey(d => d.CustomizedId)
                .HasConstraintName("FK__OrderDeta__Custo__245D67DE");

            entity.HasOne(d => d.Inspiration).WithMany(p => p.OrderDetails)
                .HasForeignKey(d => d.InspirationId)
                .HasConstraintName("FK__OrderDeta__Inspi__25518C17");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderDetails)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderDeta__Order__09946309");

            entity.HasOne(d => d.Product).WithMany(p => p.OrderDetails)
                .HasForeignKey(d => d.ProductId)
                .HasConstraintName("FK__OrderDeta__Produ__2739D489");
        });

        modelBuilder.Entity<OrderStatus>(entity =>
        {
            entity.HasKey(e => e.OrderStatusId).HasName("PK__OrderSta__BC674F41BAE179BF");

            entity.ToTable("OrderStatus");

            entity.Property(e => e.OrderStatusId).HasColumnName("OrderStatusID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(10);
        });

        modelBuilder.Entity<PasswordReset>(entity =>
        {
            entity.HasKey(e => e.TokenId);

            entity.ToTable("PasswordReset");

            entity.Property(e => e.ExpiryDate).HasColumnType("datetime");
            entity.Property(e => e.Token)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Payment>(entity =>
        {
            entity.HasKey(e => e.PaymentId).HasName("PK__Payment__9B556A58B58B57F1");

            entity.ToTable("Payment");

            entity.Property(e => e.PaymentId).HasColumnName("PaymentID");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<PaymentStatus>(entity =>
        {
            entity.HasKey(e => e.PaymentStatusId).HasName("PK__PaymentS__34F8AC1F75AFB013");

            entity.ToTable("PaymentStatus");

            entity.Property(e => e.PaymentStatusId).HasColumnName("PaymentStatusID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(10);
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.ProductId).HasName("PK__Product__B40CC6ED1D883D39");

            entity.ToTable("Product");

            entity.Property(e => e.ProductId).HasColumnName("ProductID");
            entity.Property(e => e.Category)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.ImageFileName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.OriginalPrice).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.PromotionId).HasColumnName("PromotionID");
            entity.Property(e => e.SalePrice).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.StatusId).HasColumnName("StatusID");

            entity.HasOne(d => d.Promotion).WithMany(p => p.Products)
                .HasForeignKey(d => d.PromotionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Product__Promoti__29221CFB");

            entity.HasOne(d => d.Status).WithMany(p => p.Products)
                .HasForeignKey(d => d.StatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Product__StatusI__2A164134");
        });

        modelBuilder.Entity<ProductSpecification>(entity =>
        {
            entity.HasKey(e => e.ProductSpecificationId).HasName("PK__ProductS__BAE4044D8212F5E4");

            entity.ToTable("ProductSpecification");

            entity.Property(e => e.ProductSpecificationId).HasColumnName("ProductSpecificationID");
            entity.Property(e => e.ColorId).HasColumnName("ColorID");
            entity.Property(e => e.ComponentId).HasColumnName("ComponentID");
            entity.Property(e => e.MaterialId).HasColumnName("MaterialID");
            entity.Property(e => e.ProductId).HasColumnName("ProductID");

            entity.HasOne(d => d.Color).WithMany(p => p.ProductSpecifications)
                .HasForeignKey(d => d.ColorId)
                .HasConstraintName("FK__ProductSp__Color");

            entity.HasOne(d => d.Component).WithMany(p => p.ProductSpecifications)
                .HasForeignKey(d => d.ComponentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductSp__Compo__2A164134");

            entity.HasOne(d => d.Material).WithMany(p => p.ProductSpecifications)
                .HasForeignKey(d => d.MaterialId)
                .HasConstraintName("FK__ProductSp__Material");

            entity.HasOne(d => d.Product).WithMany(p => p.ProductSpecifications)
                .HasForeignKey(d => d.ProductId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductSp__Produ__2DE6D218");
        });

        modelBuilder.Entity<PromoCode>(entity =>
        {
            entity.HasKey(e => e.PromoCodeId).HasName("PK__PromoCod__867BC566BD8BC9FF");

            entity.ToTable("PromoCode");

            entity.Property(e => e.PromoCodeId).HasColumnName("PromoCodeID");
            entity.Property(e => e.Code)
                .IsRequired()
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Limitation).HasMaxLength(50);
            entity.Property(e => e.Method)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Promotion>(entity =>
        {
            entity.HasKey(e => e.PromotionId).HasName("PK__Promotio__52C42F2F46C1B09F");

            entity.ToTable("Promotion");

            entity.Property(e => e.PromotionId).HasColumnName("PromotionID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<ServiceRecord>(entity =>
        {
            entity.HasKey(e => e.RecordId).HasName("PK__ServiceR__FBDF78C9C24E990E");

            entity.ToTable("ServiceRecord");

            entity.Property(e => e.RecordId).HasColumnName("RecordID");
            entity.Property(e => e.AdministratorId).HasColumnName("AdministratorID");
            entity.Property(e => e.Answer).HasMaxLength(200);
            entity.Property(e => e.AnswerTime).HasColumnType("datetime");
            entity.Property(e => e.MemberId).HasColumnName("MemberID");
            entity.Property(e => e.Question)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.QuestionTime)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Administrator).WithMany(p => p.ServiceRecords)
                .HasForeignKey(d => d.AdministratorId)
                .HasConstraintName("FK__ServiceRe__Admin__650CE9D0");

            entity.HasOne(d => d.Member).WithMany(p => p.ServiceRecords)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ServiceRe__Membe__2CF2ADDF");
        });

        modelBuilder.Entity<Shipping>(entity =>
        {
            entity.HasKey(e => e.ShippingId).HasName("PK__Shipping__5FACD4607F77F72E");

            entity.ToTable("Shipping");

            entity.Property(e => e.ShippingId).HasColumnName("ShippingID");
            entity.Property(e => e.DeliveryCost).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<ShippingStatus>(entity =>
        {
            entity.HasKey(e => e.ShippingStatusId).HasName("PK__Shipping__16535FADBFB17B9E");

            entity.ToTable("ShippingStatus");

            entity.Property(e => e.ShippingStatusId).HasColumnName("ShippingStatusID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(10);
        });

        modelBuilder.Entity<Status>(entity =>
        {
            entity.HasKey(e => e.StatusId).HasName("PK__Status__C8EE20432B074F67");

            entity.ToTable("Status");

            entity.Property(e => e.StatusId).HasColumnName("StatusID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<StoreLocation>(entity =>
        {
            entity.HasKey(e => e.StoreLocationId).HasName("PK__StoreLoc__A130597CD2E5CDD9");

            entity.ToTable("StoreLocation");

            entity.Property(e => e.StoreLocationId).HasColumnName("StoreLocationID");
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.OfficeTelephone)
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}